{"version":3,"sources":["./src/app/monthly-summary/monthly-summary.page.html","./src/app/monthly-summary/monthly-summary.module.ts","./src/app/monthly-summary/monthly-summary.page.scss","./src/app/monthly-summary/monthly-summary.page.ts","./src/app/monthly-summary/monthly-summary.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,qUAAsQ,gBAAgB,oLAAoL,yCAAyC,gDAAgD,uCAAuC,iDAAiD,8CAA8C,gOAAgO,2BAA2B,4CAA4C,6BAA6B,2CAA2C,6BAA6B,yOAAyO,4CAA4C,mEAAmE,gDAAgD,qEAAqE,yDAAyD,wEAAwE,mDAAmD,sEAAsE,qDAAqD,oYAAoY,iCAAiC,iDAAiD,+BAA+B,oDAAoD,+BAA+B,0QAA0Q,kCAAkC,0EAA0E,gCAAgC,4EAA4E,gCAAgC,sRAAsR,iCAAiC,yEAAyE,iCAAiC,qFAAqF,gCAAgC,yRAAyR,sBAAsB,yCAAyC,wBAAwB,wCAAwC,wBAAwB,iTAAiT,aAAa,kHAAkH,2BAA2B,kDAAkD,0BAA0B,iDAAiD,qCAAqC,uH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp5I;AACM;AACF;AACU;AAEV;AAEe;AAE5D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAWF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QATpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;;ACzBrC;AAAe,6GAA8C,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACgB;AAOlE;IAIE,4BAAoB,sBAA6C;QAA7C,2BAAsB,GAAtB,sBAAsB,CAAuB;IAAI,CAAC;IAEtE,qCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,sCAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7C,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;;gBAV2C,8EAAqB;;IAJtD,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,iMAA0C;;SAE3C,CAAC;yCAK4C,8EAAqB;OAJtD,kBAAkB,CAgB9B;IAAD,yBAAC;CAAA;AAhB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRY;AACoB;AACJ;AAK3D;IAGE,+BAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAF3C,QAAG,GAAG,wEAAW,CAAC,OAAO,GAAG,8BAA8B,CAAC;IAEb,CAAC;IAE/C,mCAAG,GAAH;QACE,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,EAAE;YACpD,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;;gBAPgC,+DAAU;;IAHhC,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIiC,+DAAU;OAHhC,qBAAqB,CAWjC;IAAD,4BAAC;CAAA;AAXiC","file":"monthly-summary-monthly-summary-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Taxi do Barba\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-item> Mês {{ report?.date }} </ion-item>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Resumo</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-item> Valor bruto: {{ report?.summary.grossValue | currency }} </ion-item>\\n      <ion-item> Valor líquido: {{ report?.summary.netValue | currency }} </ion-item>\\n      <ion-item> Valor esperado: {{ report?.summary.averageDayValue | currency }} </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>KM Rodados</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-item> KM Cidade: {{ report?.km.kmRolledCity }} </ion-item>\\n      <ion-item> KM Viagem: {{ report?.km.kmRolledTravel }} </ion-item>\\n      <ion-item> KM Total: {{ report?.km.amountKmRolled }} </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Consumo</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-item>\\n        KM por Litro: {{ report?.consumption.litersPerKm | number }}\\n      </ion-item>\\n      <ion-item>\\n        KM Médio por Dia: {{ report?.consumption.averageKmPerDay | number }}\\n      </ion-item>\\n      <ion-item>\\n        Preço Médio por KM: {{ report?.consumption.averagePriceSpentPerKm | currency }}\\n      </ion-item>\\n      <ion-item>\\n        Preço Médio por Litro: {{ report?.consumption.averagePriceFuel | currency }}\\n      </ion-item>\\n      <ion-item>\\n        Valor Médio por Dia: {{ report?.consumption.averagePricePerDay | currency }}\\n      </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Cartões</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title>Débito</ion-card-title>\\n        </ion-card-header>\\n\\n        <ion-card-content>\\n          <ion-item> Valor Bruto: {{ report?.card.debit.grossValue }} </ion-item>\\n          <ion-item> Valor Taxa: {{ report?.card.debit.taxValue }} </ion-item>\\n          <ion-item> Valor Líquido: {{ report?.card.debit.netValue }} </ion-item>\\n        </ion-card-content>\\n      </ion-card>\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title>Crédito</ion-card-title>\\n        </ion-card-header>\\n\\n        <ion-card-content>\\n          <ion-item>\\n            Valor Bruto: {{ report?.card.credit.grossValue }}\\n          </ion-item>\\n          <ion-item> \\n            Valor Taxa: {{ report?.card.credit.taxValue }}\\n          </ion-item>\\n          <ion-item>\\n            Valor Líquido: {{ report?.card.credit.netValue }}\\n          </ion-item>\\n        </ion-card-content>\\n      </ion-card>\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title>Resumo</ion-card-title>\\n        </ion-card-header>\\n\\n        <ion-card-content>\\n          <ion-item>\\n            Valor Líquido: {{ report?.card.summary.netValue }}\\n          </ion-item>\\n          <ion-item>\\n            Valor Taxa: {{ report?.card.summary.taxValue }}\\n          </ion-item>\\n          <ion-item>\\n            Percentual Recebimento: {{ report?.card.summary.percent }}\\n          </ion-item>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Gastos</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-item> Combustível: {{ report?.spent.fuel }} </ion-item>\\n      <ion-item> Outros: {{ report?.spent.others }} </ion-item>\\n      <ion-item> Total: {{ report?.spent.amount }} </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Motoristas</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-card *ngFor=\\\"let item of report?.driver\\\">\\n        <ion-card-header>\\n          <ion-card-title>{{ item.name }}</ion-card-title>\\n        </ion-card-header>\\n\\n        <ion-card-content>\\n          <ion-item> Média Diária: {{ item.average | currency }} </ion-item>\\n          <ion-item> Valor Total: {{ item.amount | currency }} </ion-item>\\n          <ion-item> Percentual: {{ item.percentage | number: '2.2-2' }} </ion-item>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MonthlySummaryPage } from './monthly-summary.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MonthlySummaryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MonthlySummaryPage]\n})\nexport class MonthlySummaryPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vbnRobHktc3VtbWFyeS9tb250aGx5LXN1bW1hcnkucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MonthlySummaryService } from './monthly-summary.service';\n\n@Component({\n  selector: 'app-monthly-summary',\n  templateUrl: './monthly-summary.page.html',\n  styleUrls: ['./monthly-summary.page.scss'],\n})\nexport class MonthlySummaryPage implements OnInit {\n\n  report: MonthlySummary;\n\n  constructor(private _monthlySummaryService: MonthlySummaryService) { }\n\n  ngOnInit() {\n    this.getReport();\n  }\n\n  getReport() {\n    this._monthlySummaryService.get().subscribe(suc => {\n      this.report = suc;\n    });\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MonthlySummaryService {\n  url = environment.baseUrl + \"/api/v1/actual-month-summary\";\n\n  constructor(private _httpClient: HttpClient) {}\n\n  get() {\n    const HEADERS = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n    return this._httpClient.get<MonthlySummary>(this.url, {\n      headers: HEADERS\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}