{"version":3,"sources":["./src/app/monthly-goal/monthly-goal.page.html","./src/app/monthly-goal/monthly-goal.module.ts","./src/app/monthly-goal/monthly-goal.page.scss","./src/app/monthly-goal/monthly-goal.page.ts","./src/app/monthly-goal/monthly-goal.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,g2BAAiyB,aAAa,4EAA4E,aAAa,4EAA4E,kBAAkB,4EAA4E,oBAAoB,4EAA4E,mBAAmB,kQAAkQ,2BAA2B,4EAA4E,gCAAgC,4EAA4E,kCAAkC,4EAA4E,iCAAiC,iG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9uD;AACM;AACF;AACU;AAEV;AAES;AAEtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;AAWF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,kEAAe,CAAC;SAChC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;ACzBlC;AAAe,6GAA8C,uJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACU;AAO5D;IAKE,yBAAoB,mBAAuC;QAAvC,wBAAmB,GAAnB,mBAAmB,CAAoB;IAAI,CAAC;IAEhE,kCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,mCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,aAAG;YAC1C,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC;YACvB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;;gBAXwC,wEAAkB;;IALhD,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wLAAuC;;SAExC,CAAC;yCAMyC,wEAAkB;OALhD,eAAe,CAkB3B;IAAD,sBAAC;CAAA;AAlB2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRe;AACoB;AACJ;AAK3D;IAIE,4BAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAF3C,QAAG,GAAG,wEAAW,CAAC,OAAO,GAAG,sBAAsB,CAAC;IAEJ,CAAC;IAEhD,gCAAG,GAAH;QACE,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAc,IAAI,CAAC,GAAG,EAAE;YACjD,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;;gBAPgC,+DAAU;;IAJhC,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAKiC,+DAAU;OAJhC,kBAAkB,CAa9B;IAAD,yBAAC;CAAA;AAb8B","file":"monthly-goal-monthly-goal-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Taxi do Barba\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col class=\\\"ion-text-center\\\">\\n        Data\\n      </ion-col>\\n      <ion-col class=\\\"ion-text-center\\\">\\n        Meta\\n      </ion-col>\\n      <ion-col class=\\\"ion-text-center\\\">\\n        Anterior\\n      </ion-col>\\n      <ion-col class=\\\"ion-text-center\\\">\\n        Atual\\n      </ion-col>\\n      <ion-col class=\\\"ion-text-center\\\">\\n        %\\n      </ion-col>\\n    </ion-row>\\n    <ion-row *ngFor=\\\"let item of report\\\">\\n      <ion-item-divider color=\\\"light\\\">\\n        <ion-col class=\\\"ion-text-center\\\">\\n          {{ item.date }}\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-end\\\">\\n          {{ item.goal }}\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-end\\\">\\n          {{ item.lastMonth }}\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-end\\\">\\n          {{ item.actualMonth }}\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-end\\\">\\n          {{ item.percentage }}\\n        </ion-col>\\n      </ion-item-divider>\\n    </ion-row>\\n    <ion-row>\\n      <ion-item-divider color=\\\"light\\\">\\n        <ion-col class=\\\"ion-text-center\\\">\\n          Total\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-end\\\">\\n          {{ summary && summary.goal }}\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-end\\\">\\n          {{ summary && summary.lastMonth }}\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-end\\\">\\n          {{ summary && summary.actualMonth }}\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-end\\\">\\n          {{ summary && summary.percentage }}\\n        </ion-col>\\n      </ion-item-divider>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MonthlyGoalPage } from './monthly-goal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MonthlyGoalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MonthlyGoalPage]\n})\nexport class MonthlyGoalPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vbnRobHktZ29hbC9tb250aGx5LWdvYWwucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MonthlyGoalService } from './monthly-goal.service';\n\n@Component({\n  selector: 'app-monthly-goal',\n  templateUrl: './monthly-goal.page.html',\n  styleUrls: ['./monthly-goal.page.scss'],\n})\nexport class MonthlyGoalPage implements OnInit {\n\n  report: Array<MonthlyGoalItem>;\n  summary: MonthGoalSummary;\n\n  constructor(private _monthlyGoalService: MonthlyGoalService) { }\n\n  ngOnInit() {\n    this.getReport();\n  }\n\n  getReport() {\n    this._monthlyGoalService.get().subscribe(suc => {\n      this.report = suc.goal;\n      this.summary = suc.summary;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MonthlyGoalService {\n\n  url = environment.baseUrl + '/api/v1/monthly-goal';\n\n  constructor(private _httpClient: HttpClient) { }\n\n  get() {\n    const HEADERS = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._httpClient.get<MonthlyGoal>(this.url, {\n      headers: HEADERS\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}